{"creationTimeStamp":"2022-10-27T13:05:29.567Z","modifiedTimeStamp":"2022-10-27T13:15:39.828Z","createdBy":"Sundaresh.Sankaran@sas.com","modifiedBy":"Sundaresh.Sankaran@sas.com","name":"SDG - Train a Synthetic Data Generator.step","displayName":"SDG - Train a Synthetic Data Generator.step","localDisplayName":"SDG - Train a Synthetic Data Generator.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","uri":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","uri":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","uri":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","uri":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","uri":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","uri":"/dataFlows/steps/3344a3bf-e223-4560-a624-168d574cb440","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputtable1","displayName":"inputtable1","localDisplayName":"inputtable1","minEntries":1,"maxEntries":1,"type":"table"}],"outputPorts":[{"name":"outputtable1","displayName":"outputtable1","localDisplayName":"outputtable1","minEntries":1,"maxEntries":1,"type":"table","requiresStructure":false},{"name":"outputtable2","displayName":"outputtable2","localDisplayName":"outputtable2","minEntries":1,"maxEntries":1,"type":"table","requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"Train\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Train\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"numSamples\",\n\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\"label\": \"Number of Samples\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"varlist\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Enter candidate variables separated by space.\",\n\t\t\t\t\t\"placeholder\": \"e.g.  SALES EXPENSES \",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable1\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Data Table\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"outputtable1\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output Data\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"outputtable2\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Model binary name (desired)\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Advanced\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aeEpochs\",\n\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\"label\": \"# of epochs for the Autoencoder optimizer\",\n\t\t\t\t\t\"placeholder\": \"1\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"excludemin\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"ganEpochs\",\n\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\"label\": \"# of epochs for the GAN optimizer\",\n\t\t\t\t\t\"placeholder\": \"1\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"excludemin\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text_description\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Train a Synthetic Data Generator\\n\\nThe \\\"Train a Synthetic Data Generator\\\" custom step helps users train a model through Generative Adversarial Networks which learns the underlying distributions and correlations in an existing dataset.  This step results in a model binary, known as an astore, which can be used within a scoring process.\\n\\nInput parameters for this custom step are : \\n\\n1. An input dataset referring to an in-memory CAS table, which serves as the training data - attach this to the input port of this step.\\n2. Candidate variables to be used as the basis for training the model. Provide these as a space-delimited list.\\n3. Number of sample observations to generate.\\n4. Advanced tab: Number of epochs for the autoencoder and GAN optimizers.\\n\\nAlso, set up the following output parameters.\\n\\n1. Attach a table to the output port for Output Data, which contains sample generated observations for review.\\n2. Attach a table to the output port for Desired Model Binary, which will hold the astore table. (Note: the astore is a binary table. Do not attempt to open it within SAS Studio as it won't be readable.)\\n\\nThe action is documented here : https://documentation.sas.com/?cdcId=pgmsascdc&cdcVersion=default&docsetId=casactml&docsetTarget=cas-generativeadversarialnet-tabulargantrain.htm\\n\\nCreated / contact : Brett Wujek (brett.wujek@sas.com),  Reza Nazari (reza.nazari@sas.com) , Ruiwen Zhang (ruiwen.zhang@sas.com) and Sundaresh Sankaran (sundaresh.sankaran@sas.com) \\n\\nVersion : 1.0.   (06OCT2022)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"numSamples\": 20,\n\t\t\"varlist\": \"\",\n\t\t\"inputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"outputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"outputtable2\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"aeEpochs\": 1,\n\t\t\"ganEpochs\": 1\n\t},\n\t\"promptHierarchies\": []\n}","templates":{"SAS":"data casuser.ganTable;\n   set &inputtable1.;\nrun;\n\nproc python;\nsubmit;\nvarlist=SAS.symget(\"varlist\")\nSAS.symput(\"mylist\",', '.join('\"' + item + '\"' for item in varlist.split(\" \") if item).replace('\"\"','\"') )\nendsubmit;\nquit;\n\n/* Define the runloop macro */\n%macro runloop;\n     /* Specify all interval input variables*/\n\t%let names=&varlist.;\n\n\tdata centroids;\n\t\tset _null_;\n\trun;\n\n     /* Loop over all variables that need centroids generation */\n     %do i=1 %to %sysfunc(countw(&names));\n\n         %let name&i = %scan(%nrquote(&names.), &i., %str(\" \"));\n         /* Call the GMM action to cluster each variable */\n         proc cas ;\n             action nonParametricBayes.gmm result=R/\n                 table       = {name=\"ganTable\"},\n                 inputs      = {\"&&name&i\"},/*'value'*/\n                 seed        = 1234567890,\n                 maxClusters = 10,\n                 alpha       = 1,\n                 infer       = {method=\"VB\",\n                                maxVbIter =30,\n                                covariance=\"diagonal\",\n                                threshold=0.01},\n                 output      = {casOut={name='Score', replace=true},\n                                copyVars={&mylist.}},\n                 display     = {names={ \"ClusterInfo\"}}\n                ;\n             run;\n             saveresult R.ClusterInfo replace dataset=work.weights&i;\n         run;\n         quit;\n\n\n         data  weights&i;\n             format varname $100.;\n             informat varname $100.;\n             set  weights&i(rename=(&&name&i.._Mean=Mean\n                                    &&name&i.._Variance=Var));\n\t\t     varname = \"&&name&i\";\n             std = sqrt(Var);\n             drop Var;\n         run;\n\n  \n             data centroids;\n             \tset weights&i. centroids ;\n             run;\n\n     %end;\n %mend;\n\n /* Run the runloop macro to generate the centroids table */\n %runloop;\n\ndata casuser.centroids;\n   set centroids;\nrun;\n\n%put _all_;\n\n\n\n\n\n/* PUBLIC.HMEQ*/\n\nproc cas;\n     loadactionset \"generativeAdversarialNet\";\n     action tabularGanTrain result = r /\n         table           = {name = \"&inputtable1_name_base.\", caslib=\"&inputtable1_lib.\"\n                           vars = {&mylist.}},\n/*                             vars = {'ANNUAL_INC_LOG', 'CURR_AMNT_LOG', 'ACCNT_STAT_USD', 'ACCNT_STAT_ACT', 'ACCNT_STAT_CLO', 'ACCNT_STAT_DR', 'ACCNT_TYPE_USD', 'ACCNT_TYPE_C', 'ACCNT_TYPE_M', 'ACCNT_TYPE_P', 'DRMNT_IND_USD', 'DRMNT_IND_N', 'DRMNT_IND_Y', 'PARTY_STAT_USD', 'PARTY_STAT_ACT', 'PARTY_STAT_DR', 'PARTY_TYPE_USD', 'PARTY_TYPE_IND', 'PARTY_TYPE_ORG', 'ALERT_STATUS'}}, */\n         centroidsTable  = {name = \"CENTROIDS\", caslib=\"CASUSER\"},\n/*          nominals        = {''}, */\n         gpu             = {useGPU = False, device = 0},\n         optimizerAe     = {method = \"ADAM\", numEpochs = &aeEpochs.},\n         optimizerGan    = {method = \"ADAM\", numEpochs = &ganEpochs.},\n         seed            = 12345,\n         scoreSeed       = 0,\n         numSamples      = &numSamples,\n         saveState       = {name = \"&outputtable2_name_base.\", caslib=\"&outputtable2_lib.\", replace=True},\n         casOut          = {name = \"&outputtable1_name_base.\", caslib=\"&outputtable1_lib.\", replace = True};\n     print r;\n run;\n quit;\n\nproc cas;\n\ttable.save /\n\t\ttable={name = \"&outputtable2_name_base.\", caslib=\"&outputtable2_lib.\"}\n\t\tname=\"&outputtable2_name_base.\"\n\t\tcaslib=\"&outputtable2_lib.\"\n\t\treplace=True\n;\nquit;\n\n\n\n"}}